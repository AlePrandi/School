Ereditarietà 

tutte le classi sono derivate dalla classe object
viene automaticamente richiamato il costruttore nelle sottoclassi
binding dinamico, associa il metodo a livello di esecuzione

dichiarazione protected --> visibile solo nelle sottoclassi, scritto come # nell'uml
			    a differenza dei public che è visibile da tutti
dichiarazione package --> quando non metto niente all'interno della dichiarazione

Up-casting e Down-casting

ad una classe principale posso assegnare posso assegnare una sottoclasse 
perchè ogni sotttoclasse fà sicuramente parte di quella principale

Persona p1,p2;
Docente doc1,doc2; //Docente extends Persona
doc1= new Docente("Rossi Ugo","Mate");
p2= new Persona("Verdi Lia");
//errore doc2 = new Persona("tizio");
p1=doc1; //up-casting sottinteso (Persona)doc1
doc2=(Docente)p2; <-- down-casting non lecito ClassCastException
doc2=(Docente)p1; <-- down-casting lecito perché p1 in realtà si riferisce ad un Docente

Una classe astratta non può essere istanziata
es. Animale non ha senso di esistere ma esiste cane,gatto...

La classe astratta serve come base per metter tutti gli attributi in comune
Una classe concreta non può ne avere ne usare un metodo astratto

Si usa la classe Vector per dei vettori ad oggetti
la CAPACITY indica la dimensione massima mentre la SIZE incrementa ogni volta che faccio un add